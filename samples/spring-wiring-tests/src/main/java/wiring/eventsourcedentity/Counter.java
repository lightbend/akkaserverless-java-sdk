/* This code was generated by Kalix tooling.
 * As long as this file exists it will not be re-generated.
 * You are free to make changes to this file.
 */
package wiring.eventsourcedentity;

import kalix.javasdk.eventsourcedentity.EventSourcedEntity;
import kalix.springsdk.annotations.Entity;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

@Entity(entityKey = "id", entityType = "counter", events = { ValueIncreased.class })
@RequestMapping("/counter/{id}")
public class Counter extends EventSourcedEntity<Integer> {

    private Logger logger = LoggerFactory.getLogger(getClass());


    // how to declare that this entity subscribes to their events?
    // how to know what to implement?
    @PostMapping("/increase/{value}")
    public Effect<String> increase(@PathVariable Integer value) {
        // how do we access current state?
        logger.info("Increasing counter with commandContext={} value={}", commandContext(), value);

        return effects()
            .emitEvent(new ValueIncreased(value))
            .thenReply((s) -> "Ok");
    }

    public Integer handle(ValueIncreased value) {
        return value.value; // TODO add currentState
    }
}