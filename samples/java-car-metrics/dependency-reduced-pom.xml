<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.akkaseverless.samples</groupId>
  <artifactId>car-metrics</artifactId>
  <name>Metrics from, with Eventing?</name>
  <version>1.0-SNAPSHOT</version>
  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.0</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <directory>${project.build.directory}/generated-resources</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${jdk.target}</source>
          <target>${jdk.target}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <executions>
          <execution>
            <id>protobuf</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <writeDescriptorSet>true</writeDescriptorSet>
              <includeSourceInfoInDescriptorSet>true</includeSourceInfoInDescriptorSet>
              <descriptorSetFileName>user-function.desc</descriptorSetFileName>
              <checkStaleness>true</checkStaleness>
              <protocArtifact>com.google.protobuf:protoc:3.9.1:exe:${os.detected.classifier}</protocArtifact>
            </configuration>
          </execution>
          <execution>
            <id>grpc-client</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <writeDescriptorSet>true</writeDescriptorSet>
              <includeSourceInfoInDescriptorSet>true</includeSourceInfoInDescriptorSet>
              <protoTestSourceRoot>src/main/proto</protoTestSourceRoot>
              <descriptorSetFileName>user-function-test.desc</descriptorSetFileName>
              <checkStaleness>true</checkStaleness>
              <protocArtifact>com.google.protobuf:protoc:3.9.1:exe:${os.detected.classifier}</protocArtifact>
              <protocPlugins>
                <protocPlugin>
                  <id>akka-grpc</id>
                  <groupId>com.lightbend.akka.grpc</groupId>
                  <artifactId>akka-grpc-scalapb-protoc-plugin_2.12</artifactId>
                  <version>${akka-grpc.version}</version>
                  <mainClass>akka.grpc.gen.Main</mainClass>
                </protocPlugin>
              </protocPlugins>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer>
                  <resource>reference.conf</resource>
                </transformer>
                <transformer>
                  <mainClass>${akkasls.mainClass}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.26.1</version>
        <executions>
          <execution>
            <id>build-docker-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>push-docker-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <images>
            <image>
              <name>${akkasls.dockerImage}:%l</name>
              <build>
                <from>docker.io/library/adoptopenjdk:${jdk.target}-jre-hotspot</from>
                <tags>
                  <tag>${akkasls.dockerTag}</tag>
                </tags>
                <ports>
                  <port>8080</port>
                </ports>
                <assembly>
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <entryPoint>
                  <arg>java</arg>
                  <arg>-jar</arg>
                  <arg>/maven/${project.build.finalName}.jar</arg>
                </entryPoint>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>${akkasls.mainClass}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTest</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.lightbend</groupId>
        <artifactId>akkasls-maven-plugin</artifactId>
        <version>0.26.0</version>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dockerImage>${akkasls.dockerImage}:${akkasls.dockerTag}</dockerImage>
          <mainClass>${akkasls.mainClass}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>it</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.2.0</version>
            <executions>
              <execution>
                <id>add-integration-test-source</id>
                <phase>generate-test-sources</phase>
                <goals>
                  <goal>add-test-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>src/it/java</source>
                  </sources>
                </configuration>
              </execution>
              <execution>
                <id>add-integration-test-resource</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>add-test-resource</goal>
                </goals>
                <configuration>
                  <resources>
                    <resource>
                      <directory>src/it/resources</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.22.2</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/*IntegrationTest</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <os.detected.arch>x86_64</os.detected.arch>
        <os.detected.bitness>64</os.detected.bitness>
        <os.detected.name>osx</os.detected.name>
        <os.detected.classifier>osx-x86_64</os.detected.classifier>
      </properties>
    </profile>
  </profiles>
  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>lightbend-akkaserverless</id>
      <name>repo-lightbend-com-akkaserverless</name>
      <url>https://repo.lightbend.com/lightbend/akkaserverless/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>lightbend-akkaserverless</id>
      <name>repo-lightbend-com-akkaserverless</name>
      <url>https://repo.lightbend.com/lightbend/akkaserverless/</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>com.akkaserverless</groupId>
      <artifactId>akkaserverless-java-sdk-testkit</artifactId>
      <version>0.7.0-beta.10</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>testcontainers</artifactId>
          <groupId>org.testcontainers</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.7.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>byte-buddy</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
        <exclusion>
          <artifactId>byte-buddy-agent</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
        <exclusion>
          <artifactId>objenesis</artifactId>
          <groupId>org.objenesis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <properties>
    <akkasls.mainClass>car.Main</akkasls.mainClass>
    <jdk.target>11</jdk.target>
    <akkaserverless-sdk.version>0.7.0-beta.10</akkaserverless-sdk.version>
    <akka-grpc.version>1.1.1</akka-grpc.version>
    <akkasls.dockerTag>${project.version}</akkasls.dockerTag>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <akkasls.dockerImage>docker.io/${project.artifactId}</akkasls.dockerImage>
  </properties>
</project>

