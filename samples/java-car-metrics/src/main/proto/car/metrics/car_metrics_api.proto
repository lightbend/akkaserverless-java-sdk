// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package car.metrics.api;

option java_outer_classname = "CarMetricsApi";

import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message ChargeLevel {
	string car_id = 1 [(akkaserverless.field).entity_key = true];
	CarMetrics metrics = 2;
}

message CarId {
	string car_id = 1 [(akkaserverless.field).entity_key = true];
}

message CarMetrics {
	int32 remaining_watts = 1;
	int32 watts_capacity = 2;
}

//TODO add
// message Location {
// 	string car_id = 1 [(akkaserverless.field).entity_key = true)];
// 	double lon = 2;
// 	double lat = 3;
// 	double alt = 4;
// }
// message Speed {
// 	string car_id = 1 [(akkaserverless.field).entity_key = true)];
// 	int km_h = 2;
// }

service CarMetricsService {

	option (akkaserverless.service) = {
    	type: SERVICE_TYPE_ENTITY
    	component: ".domain.CarMetricsEntity"
  	};

	rpc RecordChargeLevel(ChargeLevel) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/car/charge/{car_id}"
			body: "metrics"
		};
	}
	rpc GetCarMetrics(CarId) returns (CarMetrics) {
		option (google.api.http) = {
			get: "/car/{car_id}"
		};
	}

}

