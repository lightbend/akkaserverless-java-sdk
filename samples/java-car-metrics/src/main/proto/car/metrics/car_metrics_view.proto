// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package car.metrics.view;

option java_outer_classname = "CarMetricsViewModel";

import "akkaserverless/annotations.proto";
import "car/metrics/car_metrics_domain.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";




service CarMetricsViewService {
	rpc ChargeLevelRecorded(domain.ChargeLevelRecorded) returns (CarMetricsState) {
		option (akkaserverless.method).eventing.in = {
			event_sourced_entity: "eventsourced-car-metrics"
		};

		option (akkaserverless.method).view.update = {
			table: "carmetrics"
			transform_updates: true	
		};	
	}

	rpc GetCarsMetrics(google.protobuf.Empty) returns (stream CarMetricsState) {
		option (akkaserverless.method).view.query = {
		 	query: "SELECT * from carmetrics"
		};
		option (google.api.http) = {
			get: "/metrics"	
		};	
	} 
}

message CarMetricsState {
	string car_id = 1;	
	int32 remaining_watts = 2;
	int32 watts_capacity = 3;
}