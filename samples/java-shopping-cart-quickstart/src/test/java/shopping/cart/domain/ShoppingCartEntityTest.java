/* This code was generated by Kalix tooling.
 * As long as this file exists it will not be re-generated.
 * You are free to make changes to this file.
 */
package shopping.cart.domain;

import kalix.javasdk.eventsourcedentity.EventSourcedEntity;
import kalix.javasdk.eventsourcedentity.EventSourcedEntityContext;
import kalix.javasdk.testkit.EventSourcedResult;
import com.google.protobuf.Empty;
import java.util.ArrayList;
import java.util.List;
import java.util.NoSuchElementException;
import org.junit.Test;
import scala.jdk.javaapi.CollectionConverters;
import shopping.cart.api.ShoppingCartApi;

import static org.junit.Assert.*;

public class ShoppingCartEntityTest {

  @Test
  public void exampleTest() {
    ShoppingCartEntityTestKit testKit = ShoppingCartEntityTestKit.of(ShoppingCartEntity::new);
    // use the testkit to execute a command
    // of events emitted, or a final updated state:
    // EventSourcedResult<SomeResponse> result = testKit.someOperation(SomeRequest);
    // verify the emitted events
    // ExpectedEvent actualEvent = result.getNextEventOfType(ExpectedEvent.class);
    // assertEquals(expectedEvent, actualEvent)
    // verify the final state after applying the events
    // assertEquals(expectedState, testKit.getState());
    // verify the response
    // SomeResponse actualResponse = result.getReply();
    // assertEquals(expectedResponse, actualResponse);
  }

  @Test
  public void addItemTest() {
    ShoppingCartEntityTestKit testKit = ShoppingCartEntityTestKit.of(ShoppingCartEntity::new);
    // EventSourcedResult<Empty> result = testKit.addItem(AddLineItem.newBuilder()...build());
  }


  @Test
  public void removeItemTest() {
    ShoppingCartEntityTestKit testKit = ShoppingCartEntityTestKit.of(ShoppingCartEntity::new);
    // EventSourcedResult<Empty> result = testKit.removeItem(RemoveLineItem.newBuilder()...build());
  }


  @Test
  public void getCartTest() {
    ShoppingCartEntityTestKit testKit = ShoppingCartEntityTestKit.of(ShoppingCartEntity::new);
    // EventSourcedResult<Cart> result = testKit.getCart(GetShoppingCart.newBuilder()...build());
  }

}
