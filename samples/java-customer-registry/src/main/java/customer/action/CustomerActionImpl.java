/* This code was generated by Akka Serverless tooling.
 * As long as this file exists it will not be re-generated.
 * You are free to make changes to this file.
 */

package customer.action;

import com.akkaserverless.javasdk.Reply;
import com.akkaserverless.javasdk.ServiceCallRef;
import com.akkaserverless.javasdk.action.ActionCreationContext;
import com.google.protobuf.Empty;
import customer.api.CustomerApi;

import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionStage;

/** An action. */
public class CustomerActionImpl extends AbstractCustomerAction {

  private final ActionCreationContext creationContext;

  public CustomerActionImpl(ActionCreationContext creationContext) {
    this.creationContext = creationContext;
  }

  /** Handler for "Create". */
  @Override
  public CompletionStage<Reply<Empty>> create(CustomerApi.Customer customer) {

    ServiceCallRef<CustomerApi.Customer> callRef =
        creationContext.serviceCallFactory().lookup(
            "customer.api.CustomerService",
            "Create",
            CustomerApi.Customer.class);

    Reply<Empty> reply = Reply.forward(callRef.createCall(customer));
    return CompletableFuture.completedFuture(reply);
  }
}