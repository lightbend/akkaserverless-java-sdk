// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//
// == Akka Serverless TCK model test for event-sourced entities ==
// see tck/src/main/scala/com/akkaserverless/tck/EventSourcedEntityTCK.scala

syntax = "proto3";

package kalix.tck.model.eventsourcedentity;

option go_package = "github.com/lightbend/akkaserverless-go-sdk/tck/eventsourcedentity;eventsourcedentity";
option java_package = "kalix.tck.model.eventsourcedentity";
option java_multiple_files = true;

import "kalix/annotations.proto";
import "akkaserverless/tck/model/eventsourcedentity/event_sourced_entity_api.proto";

//
// The `EventSourcedTwo` service is only for verifying forward actions and side effects.
// The `Call` method is not required to do anything, and must return an empty `Response` message.
//
service EventSourcedTwo {

  option (kalix.codegen) = {
    event_sourced_entity: {
      name: "EventSourcedTwoEntity"
      entity_type: "event-sourced-two"
      state: "Persisted"
      events: ["Persisted"]
    }
  };

  rpc Call(Request) returns (Response);
}
