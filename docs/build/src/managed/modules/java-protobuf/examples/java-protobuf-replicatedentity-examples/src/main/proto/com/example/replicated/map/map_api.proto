// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

package com.example.replicated.map;

option java_outer_classname = "SomeMapApi";

message IncreaseFooValue {
  string map_id = 1 [(kalix.field).entity_key = true];
  int32 value = 2;
}

message DecreaseFooValue {
  string map_id = 1 [(kalix.field).entity_key = true];
  int32 value = 2;
}

message SetBarValue {
  string map_id = 1 [(kalix.field).entity_key = true];
  string value = 2;
}

message AddBazValue {
  string map_id = 1 [(kalix.field).entity_key = true];
  string value = 2;
}

message RemoveBazValue {
  string map_id = 1 [(kalix.field).entity_key = true];
  string value = 2;
}

message GetValues {
  string map_id = 1 [(kalix.field).entity_key = true];
}

message CurrentValues {
  int64 foo = 1;
  string bar = 2;
  repeated string baz = 3;
}

// tag::replicated_entity[]
service MapService {
  option (kalix.codegen) = {
    replicated_entity: {
      name: "com.example.replicated.map.domain.SomeMap" // <1>
      entity_type: "some-map"
      replicated_map: { // <2>
        key: "com.example.replicated.map.domain.SomeKey" // <3>
      }
    }
  };

  rpc IncreaseFoo(IncreaseFooValue) returns (google.protobuf.Empty);
  rpc DecreaseFoo(DecreaseFooValue) returns (google.protobuf.Empty);
  rpc SetBar(SetBarValue) returns (google.protobuf.Empty);
  rpc AddBaz(AddBazValue) returns (google.protobuf.Empty);
  rpc RemoveBaz(RemoveBazValue) returns (google.protobuf.Empty);
  rpc Get(GetValues) returns (CurrentValues);
}
// end::replicated_entity[]
