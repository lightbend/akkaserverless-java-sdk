/* This code was generated by Kalix tooling.
 * As long as this file exists it will not be re-generated.
 * You are free to make changes to this file.
 */

package com.example.actions;

import com.example.CounterApi;
import com.google.protobuf.Empty;
import kalix.javasdk.action.ActionCreationContext;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CounterCommandFromTopicAction extends AbstractCounterCommandFromTopicAction {

  private Logger logger = LoggerFactory.getLogger(getClass());

  private ActionCreationContext creationContext;

  public CounterCommandFromTopicAction(ActionCreationContext creationContext) {
    this.creationContext = creationContext;
  }

  @Override
  public Effect<Empty> increase(CounterApi.IncreaseValue increase) {
    logger.info("Received increase command: " + increase);
    return effects().forward(components().counter().increase(increase));
  }
  @Override
  public Effect<Empty> decrease(CounterApi.DecreaseValue decrease) {
    logger.info("Received decrease command: " + decrease);
    return effects().forward(components().counter().decrease(decrease));
  }
}
