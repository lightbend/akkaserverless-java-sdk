// Copyright 2024 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

package com.example.replicated.set;

option java_outer_classname = "SomeSetApi";

message Element {
  string value = 1;
}

message AddElement {
  string set_id = 1 [(kalix.field).id = true];
  Element element = 2;
}

message RemoveElement {
  string set_id = 1 [(kalix.field).id = true];
  Element element = 2;
}

message GetElements {
  string set_id = 1 [(kalix.field).id = true];
}

message CurrentElements {
  repeated Element elements = 1;
}

service SetService {
  option (kalix.codegen) = {
    replicated_entity: {
      name: ".domain.SomeSet"
      type_id: "some-set"
      replicated_set: {
        element: ".domain.SomeElement"
      }
    }
  };

  rpc Add(AddElement) returns (google.protobuf.Empty);
  rpc Remove(RemoveElement) returns (google.protobuf.Empty);
  rpc Get(GetElements) returns (CurrentElements);
}

service ScalarSetService {
  option (kalix.codegen) = {
    replicated_entity: {
      name: ".domain.SomeScalarSet"
      type_id: "some-scalar-set"
      replicated_set: {
        element: "string"
      }
    }
  };

  rpc Add(AddElement) returns (google.protobuf.Empty);
  rpc Remove(RemoveElement) returns (google.protobuf.Empty);
  rpc Get(GetElements) returns (CurrentElements);
}
